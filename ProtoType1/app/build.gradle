apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]
    buildToolsVersion config["build_tools"]

    // Gradle automatically adds 'android.test.runner' as a dependency.
    //useLibrary 'android.test.runner'
    //useLibrary 'android.test.base'
    //useLibrary 'android.test.mock'

    defaultConfig {
        applicationId config["application_id"]
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode config["version_code"]
        versionName config["version_name"]
        testInstrumentationRunner config["test_runner"]

        vectorDrawables.useSupportLibrary = true

        //网易云信引入
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main {
            jniLibs.srcDirs = ['src/main/libs']
        }
    }

    compileOptions {
        sourceCompatibility config["source_compatibility"]
        targetCompatibility config["target_compatibility"]
    }

    testOptions { //required by robolectric
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def developmentDependencies = rootProject.ext.development
    implementation project(path: ':uikit')

    //Compile time dependencies
    //implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.0.2'
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.paging:paging-runtime:2.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'com.google.android:flexbox:1.1.0'
    kapt applicationDependencies.archComponentsCompiler
    kapt applicationDependencies.daggerCompiler
    compileOnly applicationDependencies.javaxAnnotation
    compileOnly applicationDependencies.javaxInject

    //Application dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.30"
    implementation applicationDependencies.kotlinCoroutines
    implementation applicationDependencies.kotlinCoroutinesAndroid
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.constraintLayout
    implementation applicationDependencies.archComponents
    implementation applicationDependencies.cardView
    implementation applicationDependencies.recyclerView
    implementation applicationDependencies.design
    implementation applicationDependencies.androidAnnotations

    //implementation applicationDependencies.glide
    implementation applicationDependencies.dagger
    implementation applicationDependencies.retrofit
    implementation applicationDependencies.okhttpLoggingInterceptor

    implementation 'com.google.protobuf:protobuf-java:3.7.1'

    implementation('com.github.bumptech.glide:glide:4.9.0') {
        exclude group: "com.android.support"
    }
    implementation('com.github.bumptech.glide:recyclerview-integration:4.9.0') {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    //implementation 'com.google.protobuf:protobuf-lite:3.0.1'

    // 声网
    implementation 'io.agora.rtc:full-sdk:2.3.3'
    implementation files('libs/agora-sig-sdk.jar')

    //implementation fileTree(include: ['*.jar'], dir: 'libs')

    //网易云信 (UIKit中已经带了基础的，避免编译冲突不再这里加载)

    //implementation fileTree(dir: 'libs', include: '*.jar')

    // 添加依赖。注意，版本号必须一致。

    // 基础功能 (必需)

    //implementation 'com.netease.nimlib:basesdk:6.2.0'

    // 全文检索服务需要

    //implementation 'com.netease.nimlib:lucene:6.2.0'

    // 小米、华为、魅族、fcm 推送

    //implementation 'com.netease.nimlib:push:6.2.0'

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"

    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-constraint-layout:$anko_version"

    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    //CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    //RoundedImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //RoundedTextView
    implementation 'com.libRG:customtextview:2.0'

    //RxPermissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"


    //protobuf到json转换支持
    //implementation 'com.google.protobuf:protobuf-java-util:3.7.0'

    //阿里云 OSS SDK
    implementation 'com.aliyun.dpa:oss-android-sdk:2.9.2'

    //录音及音频格式转换控件
    implementation 'com.github.adrielcafe:AndroidAudioRecorder:0.3.0'
    implementation 'com.github.adrielcafe:AndroidAudioConverter:0.0.8'

    implementation 'com.hopenlib.library:flextools:1.0.1'
    implementation 'com.april21dev.multipulseanimation:MultiPulseAnimation:1.0.1'

    //implementation 'com.alibaba:fastjson:1.1.34.android' //最新为1.1.71，有依赖冲突
    implementation 'com.nimbusds:nimbus-jose-jwt:6.0'

    implementation 'q.rorbin:badgeview:1.1.3'

    //Unit/Integration tests dependencies
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.30"
    //testImplementation unitTestDependencies.kotlinTest
    //testImplementation unitTestDependencies.robolectric
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation unitTestDependencies.junit
    //testImplementation unitTestDependencies.mockito
    testImplementation 'org.mockito:mockito-core:2.27.0'
    //testImplementation unitTestDependencies.kluent
    testImplementation 'org.amshove.kluent:kluent-android:1.49'

    //Acceptance tests dependencies
    //androidTestImplementation acceptanceTestDependencies.testRunner
    //androidTestImplementation acceptanceTestDependencies.testRules
    //androidTestImplementation acceptanceTestDependencies.espressoCore
    //androidTestImplementation acceptanceTestDependencies.espressoIntents
    //androidTestImplementation acceptanceTestDependencies.androidAnnotations

    //androidx test resource
    //https://developer.android.com/training/testing/set-up-project
    // Core library
    androidTestImplementation 'androidx.test:core:1.1.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha04'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.ext:truth:1.1.0'
    androidTestImplementation 'com.google.truth:truth:0.44'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'

    //Development dependencies
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop

    //implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
}

//for kotlin android extensions experimental features such as @Parcelize
androidExtensions {
    experimental = true
}
